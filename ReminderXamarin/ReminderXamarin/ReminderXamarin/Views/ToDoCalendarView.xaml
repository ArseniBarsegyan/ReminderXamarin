<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Name="ToDoCalendarViewPage"
             xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:base="clr-namespace:ReminderXamarin.ViewModels.Base;assembly=ReminderXamarin"
             xmlns:converters="clr-namespace:ReminderXamarin.Converters"
             xmlns:elements="clr-namespace:ReminderXamarin.Elements;assembly=ReminderXamarin"
             x:Class="ReminderXamarin.Views.ToDoCalendarView"
             Title="{Binding LastSelectedDate, StringFormat='{0:MMM yyyy}'}"
             BackgroundColor="{DynamicResource ViewBackground}"
             base:ViewModelHelper.AutoWireViewModel="True">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:ToDoStatusToColorConverter x:Key="ToDoStatusToColorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <elements:BindableToolbarItem Order="Primary"
                                      Text="{Binding CurrentDate, StringFormat='{0:dd}'}"
                                      Command="{Binding SelectCurrentDayCommand}" />
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <AbsoluteLayout x:Name="RootLayout">
            <Grid ColumnDefinitions="*,*,*,*,*,*,*"
                  RowDefinitions="*"
                  AbsoluteLayout.LayoutBounds="0,0,1,0.1"
                  AbsoluteLayout.LayoutFlags="All"
                  Padding="0,0,0,0">
                <Grid.Resources>
                    <ResourceDictionary>
                        <Style x:Key="CalendarDayNameStyle" TargetType="Label">
                            <Setter Property="HorizontalOptions" Value="Center" />
                            <Setter Property="Padding" Value="10,0" />
                            <Setter Property="Grid.Row" Value="0" />
                        </Style>
                    </ResourceDictionary>
                </Grid.Resources>
                
                <Label Text="M"
                       TextColor="{DynamicResource TextCommon}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="0" />
                        
                <Label Text="T"
                       TextColor="{DynamicResource TextCommon}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="1" />
                        
                <Label Text="W"
                       TextColor="{DynamicResource TextCommon}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="2" />
                        
                <Label Text="T"
                       TextColor="{DynamicResource TextCommon}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="3" />
                        
                <Label Text="F"
                       TextColor="{DynamicResource TextCommon}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="4" />
                        
                <Label Text="S"
                       TextColor="{DynamicResource CalendarSaturdayText}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="5" />
                        
                <Label Text="S"
                       TextColor="{DynamicResource CalendarSundayText}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="6" />
            </Grid>

            <elements:CustomCollectionView x:Name="MonthCollectionView"
                                           AbsoluteLayout.LayoutBounds="0,0.1,1,0.4"
                                           AbsoluteLayout.LayoutFlags="All"
                                           ItemsSource="{Binding Months}"
                                           ItemsUpdatingScrollMode="KeepScrollOffset">
                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Horizontal"
                                     SnapPointsType="MandatorySingle"
                                     SnapPointsAlignment="Center"
                                     Span="1"/>
                </CollectionView.ItemsLayout>
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <elements:CalendarMonthView WidthRequest="{Binding Width,
                                                                    Source={x:Reference RootLayout}}"
                                                    HeightRequest="300" />
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </elements:CustomCollectionView>

            <ListView x:Name="ToDoList"
                      AbsoluteLayout.LayoutBounds="0,1,1,0.5"
                      AbsoluteLayout.LayoutFlags="All"
                      SeparatorVisibility="None"
                      ItemsSource="{Binding AllModels}"
                      ItemSelected="ListViewOnItemSelected"
                      IsPullToRefreshEnabled="True"
                      RefreshControlColor="{DynamicResource RefreshControl}"
                      CachingStrategy="RecycleElement"
                      RefreshCommand="{Binding RefreshListCommand}"
                      IsRefreshing="{Binding IsRefreshing}"
                      VerticalScrollBarVisibility="Always">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <ViewCell.ContextActions>
                                <MenuItem Text="Delete"
                                          IconImageSource="delete.png"
                                          Command="{Binding Source={x:Reference ToDoCalendarViewPage},
                                                            Path=BindingContext.DeleteToDoCommand}"
                                          CommandParameter="{Binding .}"
                                          IsDestructive="True" />
                            </ViewCell.ContextActions>

                            <ViewCell.View>
                                <Frame HasShadow="True"
                                       Padding="10,2"
                                       BackgroundColor="{DynamicResource CardViewBackground}"
                                       BorderColor="{DynamicResource CardViewBorder}"
                                       Margin="5,0">
                                    <StackLayout Orientation="Horizontal">
                                        <Label Text="{Binding Description}"
                                               VerticalOptions="Center">
                                            <Label.FontFamily>
                                                <OnPlatform x:TypeArguments="x:String">
                                                    <On Platform="iOS" Value="Roboto-Regular" />
                                                    <On Platform="Android" Value="Roboto-Regular.ttf#Roboto-Medium" />
                                                </OnPlatform>
                                            </Label.FontFamily>
                                        </Label>
                                        <BoxView HorizontalOptions="EndAndExpand"
                                                 VerticalOptions="Center"
                                                 BackgroundColor="{Binding Status, 
                                                         Converter={StaticResource ToDoStatusToColorConverter}}"
                                                 CornerRadius="10"
                                                 WidthRequest="20"
                                                 HeightRequest="20" />
                                    </StackLayout>
                                </Frame>
                            </ViewCell.View>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <ImageButton Source="add.png"
                         Style="{StaticResource Fab}"
                         Command="{Binding CreateToDoCommand}">
                <ImageButton.CommandParameter>
                    <x:Int32>0</x:Int32>
                </ImageButton.CommandParameter>
            </ImageButton>

        </AbsoluteLayout>
    </ContentPage.Content>
</ContentPage>