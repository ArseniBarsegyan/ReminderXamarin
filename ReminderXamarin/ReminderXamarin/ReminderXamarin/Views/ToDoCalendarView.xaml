<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:base="clr-namespace:ReminderXamarin.ViewModels.Base;assembly=ReminderXamarin"
             xmlns:converters="clr-namespace:ReminderXamarin.Converters"
             xmlns:elements="clr-namespace:ReminderXamarin.Elements;assembly=ReminderXamarin"
             xmlns:extensions="clr-namespace:ReminderXamarin.Extensions;assembly=ReminderXamarin"
             x:Name="ToDoCalendarViewPage"
             x:Class="ReminderXamarin.Views.ToDoCalendarView"
             BackgroundColor="{DynamicResource ViewBackground}"
             base:ViewModelHelper.AutoWireViewModel="True">
    <NavigationPage.TitleView>
        <DatePicker Date="{Binding CalendarViewModel.LastSelectedDate}"
                    Format="MMM yyyy"
                    BackgroundColor="{DynamicResource ToDoCalendarPickerBackground}"
                    TextColor="White"
                    DateSelected="DatePickerOnDateSelected" />
    </NavigationPage.TitleView>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:ToDoStatusToColorConverter x:Key="ToDoStatusToColorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <ToolbarItem Order="Primary"
                     Text="{Binding CalendarViewModel.CurrentDate, StringFormat='{0:dd}'}"
                     Command="{Binding CalendarViewModel.SelectCurrentDayCommand}"
                     Clicked="MenuItemOnClicked" />
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <AbsoluteLayout x:Name="RootLayout">
            <Grid ColumnDefinitions="*,*,*,*,*,*,*"
                  RowDefinitions="*"
                  AbsoluteLayout.LayoutBounds="0,0,1,0.1"
                  AbsoluteLayout.LayoutFlags="All"
                  Padding="0,0,0,0">
                <Grid.Resources>
                    <ResourceDictionary>
                        <Style x:Key="CalendarDayNameStyle" TargetType="Label">
                            <Setter Property="HorizontalOptions" Value="Center" />
                            <Setter Property="Padding" Value="10,0" />
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="Grid.Row" Value="0" />
                            <Setter Property="FontFamily">
                                <OnPlatform x:TypeArguments="x:String">
                                    <On Platform="iOS" Value="Roboto-Regular" />
                                    <On Platform="Android" Value="Roboto-Regular.ttf#Roboto-Medium" />
                                </OnPlatform>
                            </Setter>
                        </Style>
                    </ResourceDictionary>
                </Grid.Resources>

                <Label Text="M"
                       TextColor="{DynamicResource TextCommon}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="0" />

                <Label Text="T"
                       TextColor="{DynamicResource TextCommon}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="1" />

                <Label Text="W"
                       TextColor="{DynamicResource TextCommon}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="2" />

                <Label Text="T"
                       TextColor="{DynamicResource TextCommon}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="3" />

                <Label Text="F"
                       TextColor="{DynamicResource TextCommon}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="4" />

                <Label Text="S"
                       TextColor="{DynamicResource CalendarSaturdayText}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="5" />

                <Label Text="S"
                       TextColor="{DynamicResource CalendarSundayText}"
                       Style="{StaticResource CalendarDayNameStyle}"
                       Grid.Column="6" />
            </Grid>

            <CollectionView x:Name="MonthCollectionView"
                            AbsoluteLayout.LayoutBounds="0,0.1,1,0.5"
                            AbsoluteLayout.LayoutFlags="All"
                            ItemsSource="{Binding Months}"
                            Scrolled="MonthCollectionViewOnScrolled"
                            ItemsUpdatingScrollMode="KeepItemsInView"
                            HorizontalScrollBarVisibility="Never"
                            VerticalScrollBarVisibility="Never">
                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Horizontal"
                                     SnapPointsType="MandatorySingle"
                                     SnapPointsAlignment="Center"
                                     Span="1" />
                </CollectionView.ItemsLayout>
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <elements:CalendarMonthView
                            WidthRequest="{Binding Width,
                                                                    Source={x:Reference RootLayout}}"
                            HeightRequest="300" />
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>

            <RefreshView AbsoluteLayout.LayoutBounds="0,1,1,0.4"
                         AbsoluteLayout.LayoutFlags="All"
                         IsRefreshing="{Binding CalendarViewModel.IsRefreshing}"
                         Command="{Binding CalendarViewModel.RefreshListCommand}"
                         RefreshColor="{DynamicResource RefreshControl}">
                <CollectionView x:Name="ToDoCollection"
                                ItemsSource="{Binding AllModels}"
                                VerticalScrollBarVisibility="Always"
                                HorizontalScrollBarVisibility="Never"
                                SelectionMode="Single"
                                SelectionChanged="ToDoCollectionOnSelectionChanged">
                    <CollectionView.ItemsLayout>
                        <LinearItemsLayout Orientation="Vertical"
                                           ItemSpacing="2" />
                    </CollectionView.ItemsLayout>

                    <CollectionView.EmptyView>
                        <StackLayout HorizontalOptions="FillAndExpand"
                                     VerticalOptions="FillAndExpand">
                            <Label VerticalOptions="Center"
                                   HorizontalOptions="Center"
                                   Text="{extensions:Translate NoToDoForCurrentDayFound}"
                                   TextColor="{DynamicResource TextCommon}">
                                <Label.FontFamily>
                                    <OnPlatform x:TypeArguments="x:String">
                                        <On Platform="iOS" Value="Roboto-Regular" />
                                        <On Platform="Android" Value="Roboto-Regular.ttf#Roboto-Medium" />
                                    </OnPlatform>
                                </Label.FontFamily>
                            </Label>
                        </StackLayout>
                    </CollectionView.EmptyView>

                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <SwipeView>
                                <SwipeView.RightItems>
                                    <SwipeItem Text="Delete"
                                               BackgroundColor="{DynamicResource DeleteSwipeItemBackground}"
                                               Command="{Binding Source={x:Reference ToDoCalendarViewPage},
                                                    Path=BindingContext.DeleteToDoCommand}"
                                               CommandParameter="{Binding .}"
                                               IsDestructive="True" />
                                </SwipeView.RightItems>
                                <Frame HasShadow="False"
                                       Padding="15,5"
                                       BackgroundColor="{DynamicResource CardViewBackground}"
                                       BorderColor="{DynamicResource CardViewBackground}"
                                       CornerRadius="20"
                                       Margin="5,2"
                                       HeightRequest="50">
                                    <Grid RowDefinitions="*"
                                          ColumnDefinitions="4*,*">
                                        <elements:ExtendedLabel Grid.Column="0"
                                                                Grid.Row="0"
                                                                Text="{Binding Description}"
                                                                TextColor="{DynamicResource TextCommon}"
                                                                VerticalOptions="Center">
                                            <elements:ExtendedLabel.FontFamily>
                                                <OnPlatform x:TypeArguments="x:String">
                                                    <On Platform="iOS" Value="Roboto-Regular" />
                                                    <On Platform="Android" Value="Roboto-Regular.ttf#Roboto-Medium" />
                                                </OnPlatform>
                                            </elements:ExtendedLabel.FontFamily>
                                        </elements:ExtendedLabel>
                                        <BoxView Grid.Column="1"
                                                 Grid.Row="0"
                                                 HorizontalOptions="EndAndExpand"
                                                 VerticalOptions="Center"
                                                 BackgroundColor="{Binding Status, 
                                                         Converter={StaticResource ToDoStatusToColorConverter}}"
                                                 CornerRadius="10"
                                                 WidthRequest="20"
                                                 HeightRequest="20" />
                                    </Grid>
                                </Frame>
                            </SwipeView>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </RefreshView>

            <ImageButton Source="add.png"
                         Style="{StaticResource Fab}"
                         Command="{Binding CreateToDoCommand}">
                <ImageButton.CommandParameter>
                    <x:Int32>0</x:Int32>
                </ImageButton.CommandParameter>
            </ImageButton>

        </AbsoluteLayout>
    </ContentPage.Content>
</ContentPage>